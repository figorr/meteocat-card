name: Build & Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout completo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Instalar dependencias
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Build del bundle
      - name: Build meteocat-card.js
        run: npm run build

      # 5️⃣ Mover archivos a la estructura deseada
      - name: Prepare repository structure
        run: |
          mkdir -p meteocat-card
          cp dist/meteocat-card.js meteocat-card/ || { echo "Error: dist/meteocat-card.js not found"; exit 1; }
          cp dist/meteocat-card-editor.js meteocat-card/ || { echo "Error: dist/meteocat-card-editor.js not found"; exit 1; }
          if [ -d "icons" ]; then
            cp -r icons meteocat-card/icons
          else
            echo "Error: icons/ directory not found"
            exit 1
          fi
          echo "Listing meteocat-card contents:"
          ls -R meteocat-card

      # 6️⃣ Configurar Git author
      - name: Configure Git author
        run: |
          git config --global user.name "semantic-release-bot"
          git config --global user.email "jdcuartero@yahoo.es"

      # 7️⃣ Commit archivos al repositorio
      - name: Commit files to repository
        run: |
          git add meteocat-card
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Add built files and icons to meteocat-card/ directory [ci skip]"
            git push
          fi

      # 8️⃣ Crear ZIP para instalación manual
      - name: Create ZIP for manual installation
        run: |
          cd meteocat-card
          zip -r ../meteocat-card.zip .
          cd ..
          echo "ZIP created at $PWD/meteocat-card.zip"
          echo "Listing ZIP contents:"
          unzip -l meteocat-card.zip

      # 9️⃣ Ejecutar semantic-release
      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      # 10️⃣ Obtener el tag del release
      - name: Get release tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -n "$LATEST_TAG" ]; then
            echo "Release tag found: $LATEST_TAG"
            echo "release_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No release tag found"
            echo "release_tag=" >> $GITHUB_OUTPUT
          fi

      # 11️⃣ Subir archivos y ZIP como assets al release
      - name: Upload files to release
        if: steps.get_tag.outputs.release_tag != ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            meteocat-card/meteocat-card.js
            meteocat-card/meteocat-card-editor.js
            meteocat-card.zip
          tag_name: ${{ steps.get_tag.outputs.release_tag }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
