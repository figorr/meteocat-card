name: Build & Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout completo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Instalar dependencias
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Configurar Git author
      - name: Configure Git author
        run: |
          git config user.name "semantic-release-bot"
          git config user.email "jdcuartero@yahoo.es"

      # 5️⃣ Ejecutar semantic-release
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      # 6️⃣ Build de los archivos
      - name: Build meteocat-card
        run: npm run build

      # 7️⃣ Crear estructura HACS temporal para el ZIP
      - name: Prepare HACS folder structure
        run: |
          rm -rf tmp
          mkdir -p tmp/meteocat-card
          cp dist/meteocat-card.js tmp/meteocat-card/
          cp dist/meteocat-card-editor.js tmp/meteocat-card/
          cp -r icons tmp/meteocat-card/
          cp hacs.json tmp/meteocat-card/

      # 8️⃣ Crear ZIP final
      - name: Create ZIP
        run: |
          cd tmp
          zip -r ../meteocat-card.zip meteocat-card
          cd ..
          echo "ZIP created at $PWD/meteocat-card.zip"

      # 9️⃣ Subir ZIP como asset al release creado
      - name: Upload ZIP to release
        uses: softprops/action-gh-release@v1
        with:
          files: meteocat-card.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
