const t={en:{title_default:"Meteocat",card_name:"Meteocat Card",card_description:"Custom card to display Meteocat integration weather data.",editor_not_available:"Visual editor not available. Please use the YAML editor.",entity:"Forecast",option_static_icons:"Static icons",icon_path_type:"Icons path",icon_path_type_hacs:"HACS installation",icon_path_type_manual:"Manual installation"},es:{title_default:"Meteocat",card_name:"Tarjeta Meteocat",card_description:"Tarjeta personalizada para mostrar datos del tiempo de la integración Meteocat.",editor_not_available:"Editor visual no disponible. Por favor, usa el editor YAML.",entity:"Previsión",option_static_icons:"Iconos estáticos",icon_path_type:"Ruta de iconos",icon_path_type_hacs:"Instalación HACS",icon_path_type_manual:"Instalación manual"},ca:{title_default:"Meteocat",card_name:"Targeta Meteocat",card_description:"Targeta personalitzada per mostrar dades del temps de la integració Meteocat.",editor_not_available:"Editor visual no disponible. Si us plau, usa l'editor YAML.",entity:"Previsió",option_static_icons:"Icones estàtiques",icon_path_type:"Ruta d'icones",icon_path_type_hacs:"Instal·lació HACS",icon_path_type_manual:"Instal·lació manual"}};function e(e,o,a={},i=o){const n=e?.language||"en";let s=t[n]?.[o]||t.en[o]||i;return Object.entries(a).forEach(([t,e])=>{s=s.replace(`{${t}}`,e)}),s}class o extends HTMLElement{constructor(){super(),this._config={},this._hass=null,this.attachShadow({mode:"open"}),this._form=null,console.log("MeteocatCardEditor: Constructor called")}setConfig(t){this._config={type:"meteocat-card",entity:"weather.home",option_static_icons:!1,icon_path_type:"hacs",...t,title:void 0},this._config.iconPath="hacs"===this._config.icon_path_type?"/hacsfiles/meteocat-card/icons/":"/local/meteocat-card/icons/",delete this._config.title,delete this._config.icons,delete this._config.sunrise_entity,delete this._config.sunset_entity,console.log("MeteocatCardEditor: setConfig called with config =",this._config),this._render()}set hass(t){if(this._hass=t,this._form&&(this._form.hass=t),this._hass&&this._config.entity&&this._hass.states[this._config.entity]){const t=this._hass.states[this._config.entity]?.attributes?.friendly_name||this._config.entity;console.log("MeteocatCardEditor: friendly_name =",t)}this._render()}connectedCallback(){console.log("MeteocatCardEditor: connectedCallback called"),this._render()}_schema(){return[{name:"entity",selector:{entity:{filter:[{domain:"weather",integration:"meteocat"}]}}},{name:"icon_path_type",selector:{select:{options:[{value:"hacs",label:e(this._hass,"icon_path_type_hacs")},{value:"manual",label:e(this._hass,"icon_path_type_manual")}]}}},{name:"option_static_icons",selector:{boolean:{}}}]}_render(){if(!this.shadowRoot)return void console.error("MeteocatCardEditor: Shadow root not available");this.shadowRoot.innerHTML="";const t=document.createElement("div"),o=document.createElement("style");if(o.textContent='\n      .row { margin-bottom: 10px; display:block; }\n      label { font-weight: 600; display:block; margin-bottom:6px; color:var(--primary-text-color); }\n      input[type="text"]{ width:100%; padding:6px 8px; box-sizing:border-box; border-radius:4px; border:1px solid rgba(0,0,0,0.12); background:var(--card-background-color); color:var(--primary-text-color); }\n      .checkbox { display:flex; align-items:center; gap:8px; margin-top:8px; }\n      .error { color: var(--error-color); padding: 16px; }\n      ha-alert { margin-bottom: 16px; }\n    ',t.appendChild(o),!customElements.get("ha-form")){console.error("MeteocatCardEditor: ha-form custom element not found");const o=document.createElement("div");return o.className="error",o.textContent=e(this._hass,"editor_not_available"),t.appendChild(o),void this.shadowRoot.appendChild(t)}try{const o=document.createElement("ha-form");o.hass=this._hass,o.data={entity:this._config.entity,option_static_icons:this._config.option_static_icons,icon_path_type:this._config.icon_path_type||"hacs"},o.schema=this._schema(),o.computeLabel=t=>e(this._hass,t.name),o.addEventListener("value-changed",t=>{const e={...this._config,...t.detail.value};e.iconPath="hacs"===e.icon_path_type?"/hacsfiles/meteocat-card/icons/":"/local/meteocat-card/icons/",delete e.title,delete e.icons,delete e.sunrise_entity,delete e.sunset_entity,console.log("MeteocatCardEditor: Config changed =",e),this.dispatchEvent(new CustomEvent("config-changed",{detail:{config:e},bubbles:!0,composed:!0})),this._config=e}),t.appendChild(o),this._form=o,console.log("MeteocatCardEditor: ha-form created successfully")}catch(o){console.error("MeteocatCardEditor: Error creating ha-form:",o);const a=document.createElement("div");a.className="error",a.textContent=e(this._hass,"editor_not_available"),t.appendChild(a)}this.shadowRoot.appendChild(t)}}customElements.get("meteocat-card-editor")?console.log("MeteocatCardEditor: Custom element meteocat-card-editor already defined"):(console.log("MeteocatCardEditor: Registering custom element meteocat-card-editor"),customElements.define("meteocat-card-editor",o));
