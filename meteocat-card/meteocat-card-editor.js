const t={en:{title_default:"Meteocat",card_name:"Meteocat Card",card_description:"Custom card to display Meteocat integration weather data.",editor_not_available:"Visual editor not available. Please use the YAML editor.",entity:"Forecast",sunrise_entity:"Sunrise",sunset_entity:"Sunset",option_static_icons:"Static icons"},es:{title_default:"Meteocat",card_name:"Tarjeta Meteocat",card_description:"Tarjeta personalizada para mostrar datos del tiempo de la integración Meteocat.",editor_not_available:"Editor visual no disponible. Por favor, usa el editor YAML.",entity:"Previsión",sunrise_entity:"Amanecer",sunset_entity:"Atardecer",option_static_icons:"Iconos estáticos"},ca:{title_default:"Meteocat",card_name:"Targeta Meteocat",card_description:"Targeta personalitzada per mostrar dades del temps de la integració Meteocat.",editor_not_available:"Editor visual no disponible. Si us plau, usa l'editor YAML.",entity:"Previsió",sunrise_entity:"Sortida del sol",sunset_entity:"Posta de sol",option_static_icons:"Icones estàtiques"}};function e(e,o,i={},n=o){const a=e?.language||"en";let s=t[a]?.[o]||t.en[o]||n;return Object.entries(i).forEach(([t,e])=>{s=s.replace(`{${t}}`,e)}),s}class o extends HTMLElement{constructor(){super(),this._config={},this._hass=null,this.attachShadow({mode:"open"}),this._form=null,console.log("MeteocatCardEditor: Constructor called")}setConfig(t){this._config={type:"meteocat-card",entity:"weather.home",sunrise_entity:"sensor.sun_next_rising",sunset_entity:"sensor.sun_next_setting",option_static_icons:!1,...t,title:void 0},delete this._config.title,delete this._config.icons,console.log("MeteocatCardEditor: setConfig called with config =",this._config),this._render()}set hass(t){if(this._hass=t,this._form&&(this._form.hass=t),this._hass&&this._config.entity&&this._hass.states[this._config.entity]){const t=this._hass.states[this._config.entity]?.attributes?.friendly_name||this._config.entity;console.log("MeteocatCardEditor: friendly_name =",t)}this._render()}connectedCallback(){console.log("MeteocatCardEditor: connectedCallback called"),this._render()}_schema(){return[{name:"entity",selector:{entity:{filter:[{domain:"weather",integration:"meteocat"}]}}},{name:"sunrise_entity",selector:{entity:{domain:"sensor"}}},{name:"sunset_entity",selector:{entity:{domain:"sensor"}}},{name:"option_static_icons",selector:{boolean:{}}}]}_render(){if(!this.shadowRoot)return void console.error("MeteocatCardEditor: Shadow root not available");this.shadowRoot.innerHTML="";const t=document.createElement("div"),o=document.createElement("style");if(o.textContent='\n      .row { margin-bottom: 10px; display:block; }\n      label { font-weight: 600; display:block; margin-bottom:6px; color:var(--primary-text-color); }\n      input[type="text"]{ width:100%; padding:6px 8px; box-sizing:border-box; border-radius:4px; border:1px solid rgba(0,0,0,0.12); background:var(--card-background-color); color:var(--primary-text-color); }\n      .checkbox { display:flex; align-items:center; gap:8px; margin-top:8px; }\n      .error { color: var(--error-color); padding: 16px; }\n    ',t.appendChild(o),!customElements.get("ha-form")){console.error("MeteocatCardEditor: ha-form custom element not found");const o=document.createElement("div");return o.className="error",o.textContent=e(this._hass,"editor_not_available"),t.appendChild(o),void this.shadowRoot.appendChild(t)}try{const o=document.createElement("ha-form");o.hass=this._hass,o.data={entity:this._config.entity,sunrise_entity:this._config.sunrise_entity,sunset_entity:this._config.sunset_entity,option_static_icons:this._config.option_static_icons},o.schema=this._schema(this._hass),o.computeLabel=t=>e(this._hass,t.name),o.addEventListener("value-changed",t=>this._onFormValueChanged(t)),t.appendChild(o),this._form=o,console.log("MeteocatCardEditor: ha-form created successfully")}catch(o){console.error("MeteocatCardEditor: Error creating ha-form:",o);const i=document.createElement("div");i.className="error",i.textContent=e(this._hass,"editor_not_available"),t.appendChild(i)}this.shadowRoot.appendChild(t)}_onFormValueChanged(t){t.stopPropagation();const e=t.detail&&t.detail.value?t.detail.value:null;e&&(this._config={...this._config,...e},delete this._config.title,delete this._config.icons,this._dispatchConfigChanged())}_dispatchConfigChanged(){const t={...this._config};delete t.title,delete t.icons,this.dispatchEvent(new CustomEvent("config-changed",{detail:{config:t},bubbles:!0,composed:!0}))}get value(){const t={...this._config};return delete t.title,delete t.icons,t}}customElements.get("meteocat-card-editor")?console.log("MeteocatCardEditor: Custom element meteocat-card-editor already defined"):(console.log("MeteocatCardEditor: Registering custom element meteocat-card-editor"),customElements.define("meteocat-card-editor",o));
