const t={en:{title_default:"Meteocat",card_name:"Meteocat Card",card_description:"Custom card to display Meteocat integration weather data.",editor_not_available:"Visual editor not available. Please use the YAML editor.",entity:"Forecast",sunrise_entity:"Sunrise",sunset_entity:"Sunset",option_static_icons:"Static icons"},es:{title_default:"Meteocat",card_name:"Tarjeta Meteocat",card_description:"Tarjeta personalizada para mostrar datos del tiempo de la integración Meteocat.",editor_not_available:"Editor visual no disponible. Por favor, usa el editor YAML.",entity:"Previsión",sunrise_entity:"Amanecer",sunset_entity:"Atardecer",option_static_icons:"Iconos estáticos"},ca:{title_default:"Meteocat",card_name:"Targeta Meteocat",card_description:"Targeta personalitzada per mostrar dades del temps de la integració Meteocat.",editor_not_available:"Editor visual no disponible. Si us plau, usa l'editor YAML.",entity:"Previsió",sunrise_entity:"Sortida del sol",sunset_entity:"Posta de sol",option_static_icons:"Icones estàtiques"}};function e(e,i,s={},n=i){const a=e?.language||"en";let o=t[a]?.[i]||t.en[i]||n;return Object.entries(s).forEach(([t,e])=>{o=o.replace(`{${t}}`,e)}),o}class i extends HTMLElement{constructor(){super(),this._config={},this._hass=null,this.attachShadow({mode:"open"}),this._form=null,console.log("MeteocatCardEditor: Constructor called")}setConfig(t){this._config={type:"meteocat-card",entity:"weather.home",sunrise_entity:"sensor.sun_next_rising",sunset_entity:"sensor.sun_next_setting",option_static_icons:!1,...t,title:void 0},delete this._config.title,delete this._config.icons,console.log("MeteocatCardEditor: setConfig called with config =",this._config),this._render()}set hass(t){if(this._hass=t,this._form&&(this._form.hass=t),this._hass&&this._config.entity&&this._hass.states[this._config.entity]){const t=this._hass.states[this._config.entity]?.attributes?.friendly_name||this._config.entity;console.log("MeteocatCardEditor: friendly_name =",t)}this._render()}connectedCallback(){console.log("MeteocatCardEditor: connectedCallback called"),this._render()}_schema(){return[{name:"entity",selector:{entity:{filter:[{domain:"weather",integration:"meteocat"}]}}},{name:"sunrise_entity",selector:{entity:{domain:"sensor"}}},{name:"sunset_entity",selector:{entity:{domain:"sensor"}}},{name:"option_static_icons",selector:{boolean:{}}}]}_render(){if(!this.shadowRoot)return void console.error("MeteocatCardEditor: Shadow root not available");this.shadowRoot.innerHTML="";const t=document.createElement("div"),i=document.createElement("style");if(i.textContent='\n      .row { margin-bottom: 10px; display:block; }\n      label { font-weight: 600; display:block; margin-bottom:6px; color:var(--primary-text-color); }\n      input[type="text"]{ width:100%; padding:6px 8px; box-sizing:border-box; border-radius:4px; border:1px solid rgba(0,0,0,0.12); background:var(--card-background-color); color:var(--primary-text-color); }\n      .checkbox { display:flex; align-items:center; gap:8px; margin-top:8px; }\n      .error { color: var(--error-color); padding: 16px; }\n    ',t.appendChild(i),!customElements.get("ha-form")){console.error("MeteocatCardEditor: ha-form custom element not found");const i=document.createElement("div");return i.className="error",i.textContent=e(this._hass,"editor_not_available"),t.appendChild(i),void this.shadowRoot.appendChild(t)}try{const i=document.createElement("ha-form");i.hass=this._hass,i.data={entity:this._config.entity,sunrise_entity:this._config.sunrise_entity,sunset_entity:this._config.sunset_entity,option_static_icons:this._config.option_static_icons},i.schema=this._schema(this._hass),i.computeLabel=t=>e(this._hass,t.name),i.addEventListener("value-changed",t=>this._onFormValueChanged(t)),t.appendChild(i),this._form=i,console.log("MeteocatCardEditor: ha-form created successfully")}catch(i){console.error("MeteocatCardEditor: Error creating ha-form:",i);const s=document.createElement("div");s.className="error",s.textContent=e(this._hass,"editor_not_available"),t.appendChild(s)}this.shadowRoot.appendChild(t)}_onFormValueChanged(t){t.stopPropagation();const e=t.detail&&t.detail.value?t.detail.value:null;e&&(this._config={...this._config,...e},delete this._config.title,delete this._config.icons,this._dispatchConfigChanged())}_dispatchConfigChanged(){const t={...this._config};delete t.title,delete t.icons,this.dispatchEvent(new CustomEvent("config-changed",{detail:{config:t},bubbles:!0,composed:!0}))}get value(){const t={...this._config};return delete t.title,delete t.icons,t}}customElements.get("meteocat-card-editor")?console.log("MeteocatCardEditor: Custom element meteocat-card-editor already defined"):(console.log("MeteocatCardEditor: Registering custom element meteocat-card-editor"),customElements.define("meteocat-card-editor",i));const s={en:{title_default:"Meteocat",entity_not_found:"Entity not found: {entity}",feels_like:"Feels like {value}°C",max_temp:"Max {value}°C",min_temp:"Min {value}°C",humidity:"{value}%",wind:"{value}",gust:"Gust",precipitation:"{value} mm",precipitation_probability:"{value}%",pressure:"{value} hPa",uv_index:"{value}",sunrise:"{value}",sunset:"{value}",daily_forecast:"Daily Forecast",hourly_forecast:"Hourly Forecast",daily:"Daily",hourly:"Hourly",today:"Today",tomorrow:"Tomorrow",no_forecast_data:"No forecast data available. Check entity or logs.",no_hourly_forecast:"Hourly forecasts not supported by this entity.",alerts:"Alerts",no_alerts:"No alerts",active_alerts:"Active alerts = {count}",alerts_details:"Alerts details",wind_alert:"Wind",rain_intensity_alert:"Rain Intensity",rain_alert:"Rain",sea_alert:"Sea",cold_alert:"Cold",warm_alert:"Warm",warm_night_alert:"Warm Night",snow_alert:"Snow",inicio:"Start",fin:"End",fecha:"Date",periodo:"Period",comentario:"Comment",umbral:"Threshold",peligro:"Danger",nivel:"Level",attribution:"Powered by Meteocatpy",sun:"Sun",mon:"Mon",tue:"Tue",wed:"Wed",thu:"Thu",fri:"Fri",sat:"Sat",unknown:"Unknown",clear:"Clear",clear_night:"Clear Night",sunny:"Sunny",partlycloudy:"Partly Cloudy",cloudy:"Cloudy",rainy:"Rainy",pouring:"Pouring",lightning_rainy:"Thunderstorm",fog:"Fog",hail:"Hail",snowy:"Snowy",snowy_rainy:"Snowy Rainy",threshold:{alert_wind:{wind_gusts_25:"Wind gusts > 25 m/s",microburst:"Microburst",tornadoes:"Tornadoes or waterspouts",wind_40:"Max. wind speed > 40 m/s",wind_35:"Max. wind speed > 35 m/s",wind_30:"Max. wind speed > 30 m/s",wind_25:"Max. wind speed > 25 m/s",wind_20:"Max. wind speed > 20 m/s",unknown:"Unknown"},alert_rain_intensity:{hail_2_cm:"Hail with diameter > 2 cm",microburst:"Microburst",intensity_40_30:"Intensity > 40 mm / 30 minutes",intensity_20_30:"Intensity > 20 mm / 30 minutes",unknown:"Unknown"},alert_rain:{microburst:"Microburst",rain_200_24:"Amount > 200 mm /24 hours",rain_100_24:"Amount > 100 mm /24 hours",unknown:"Unknown"},alert_sea:{microburst:"Microburst",tornadoes:"Tornadoes or waterspouts",waves_4:"Waves > 4.00 meters (rough sea)",waves_2_50:"Waves > 2.50 meters (tidal)",unknown:"Unknown"},alert_cold:{cold_very_intense:"Very intense cold",cold_intense:"Intense cold",unknown:"Unknown"},alert_warm:{heat_very_intense:"Very intense hot",heat_intense:"Intense heat",unknown:"Unknown"},alert_warm_night:{heat_night_very_intense:"Very intense night heat",heat_night_intense:"Intense night heat",unknown:"Unknown"},alert_snow:{hail_2_cm:"Hail with diameter > 2 cm",thickness_50_at_1000:"thickness > 50 cm at altitudes above 1000 meters up to 1500 meters",thickness_30_at_800:"thickness > 30 cm at altitudes above 800 meters up to 1000 meters",thickness_20_at_600:"thickness > 20 cm at altitudes above 600 meters up to 800 meters",thickness_20_at_1000:"thickness > 20 cm at altitudes above 1000 meters up to 1500 meters",thickness_15_at_300:"thickness > 15 cm at altitudes above 300 meters up to 600 meters",thickness_10_at_800:"thickness > 10 cm at altitudes above 800 meters up to 1000 meters",thickness_5_at_300:"thickness > 5 cm at altitudes below 300 meters",thickness_5_at_600:"thickness > 5 cm at altitudes above 600 meters up to 800 meters",thickness_2_at_300:"thickness > 2 cm at altitudes above 300 meters up to 600 meters",thickness_0_at_300:"thickness ≥ 0 cm at altitudes below 300 meters",unknown:"Unknown"}},cardinal_directions:["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"]},es:{title_default:"Meteocat",entity_not_found:"Entidad no encontrada: {entity}",feels_like:"Sensación {value}°C",max_temp:"Máx {value}°C",min_temp:"Mín {value}°C",humidity:"{value}%",wind:"{value}",gust:"Ráfaga",precipitation:"{value} mm",precipitation_probability:"{value}%",pressure:"{value} hPa",uv_index:"{value}",sunrise:"{value}",sunset:"{value}",daily_forecast:"Pronóstico diario",hourly_forecast:"Pronóstico horario",daily:"Diario",hourly:"Horario",today:"Hoy",tomorrow:"Mañana",no_forecast_data:"No hay datos de pronóstico disponibles. Verifica la entidad o los registros.",no_hourly_forecast:"Pronósticos horarios no soportados por esta entidad.",alerts:"Alertas",no_alerts:"Sin alertas",active_alerts:"Alertas activas = {count}",alerts_details:"Detalles de alertas",wind_alert:"Viento",rain_intensity_alert:"Intensidad de lluvia",rain_alert:"Lluvia",sea_alert:"Mar",cold_alert:"Frío",warm_alert:"Calor",warm_night_alert:"Noche cálida",snow_alert:"Nieve",inicio:"Inicio",fin:"Fin",fecha:"Fecha",periodo:"Período",comentario:"Comentario",umbral:"Umbral",peligro:"Peligro",nivel:"Nivel",attribution:"Powered by Meteocatpy",sun:"Dom",mon:"Lun",tue:"Mar",wed:"Mié",thu:"Jue",fri:"Vie",sat:"Sáb",unknown:"Desconocido",clear:"Despejado",clear_night:"Noche despejada",sunny:"Soleado",partlycloudy:"Parcialmente nublado",cloudy:"Nublado",rainy:"Lluvioso",pouring:"Lluvia intensa",lightning_rainy:"Tormenta",fog:"Niebla",hail:"Granizo",snowy:"Nevado",snowy_rainy:"Nieve y lluvia",threshold:{alert_wind:{wind_gusts_25:"Ráfagas de viento > 25 m/s",microburst:"Microburst",tornadoes:"Tornados o trombas marinas",wind_40:"Velocidad máxima del viento > 40 m/s",wind_35:"Velocidad máxima del viento > 35 m/s",wind_30:"Velocidad máxima del viento > 30 m/s",wind_25:"Velocidad máxima del viento > 25 m/s",wind_20:"Velocidad máxima del viento > 20 m/s",unknown:"Desconocido"},alert_rain_intensity:{hail_2_cm:"Granizo con diámetro > 2 cm",microburst:"Microburst",intensity_40_30:"Intensidad > 40 mm / 30 minutos",intensity_20_30:"Intensidad > 20 mm / 30 minutos",unknown:"Desconocido"},alert_rain:{microburst:"Microburst",rain_200_24:"Cantidad > 200 mm / 24 horas",rain_100_24:"Cantidad > 100 mm / 24 horas",unknown:"Desconocido"},alert_sea:{microburst:"Microburst",tornadoes:"Tornados o trombas marinas",waves_4:"Olas > 4,00 metros (mar gruesa)",waves_2_50:"Olas > 2,50 metros (marejada)",unknown:"Desconocido"},alert_cold:{cold_very_intense:"Frío muy intenso",cold_intense:"Frío intenso",unknown:"Desconocido"},alert_warm:{heat_very_intense:"Calor muy intenso",heat_intense:"Calor intenso",unknown:"Desconocido"},alert_warm_night:{heat_night_very_intense:"Calor nocturno muy intenso",heat_night_intense:"Calor nocturno intenso",unknown:"Desconocido"},alert_snow:{hail_2_cm:"Granizo con diámetro > 2 cm",thickness_50_at_1000:"Grosor > 50 cm a altitudes superiores a 1000 metros hasta 1500 metros",thickness_30_at_800:"Grosor > 30 cm a altitudes superiores a 800 metros hasta 1000 metros",thickness_20_at_600:"Grosor > 20 cm a altitudes superiores a 600 metros hasta 800 metros",thickness_20_at_1000:"Grosor > 20 cm a altitudes superiores a 1000 metros hasta 1500 metros",thickness_15_at_300:"Grosor > 15 cm a altitudes superiores a 300 metros hasta 600 metros",thickness_10_at_800:"Grosor > 10 cm a altitudes superiores a 800 metros hasta 1000 metros",thickness_5_at_300:"Grosor > 5 cm a altitudes inferiores a 300 metros",thickness_5_at_600:"Grosor > 5 cm a altitudes superiores a 600 metros hasta 800 metros",thickness_2_at_300:"Grosor > 2 cm a altitudes superiores a 300 metros hasta 600 metros",thickness_0_at_300:"Grosor ≥ 0 cm a altitudes inferiores a 300 metros",unknown:"Desconocido"}},cardinal_directions:["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSO","SO","OSO","O","ONO","NO","NNO"]},ca:{title_default:"Meteocat",entity_not_found:"Entitat no trobada: {entity}",feels_like:"Sensació {value}°C",max_temp:"Màx {value}°C",min_temp:"Mín {value}°C",humidity:"{value}%",wind:"{value}",gust:"Ràfega",precipitation:"{value} mm",precipitation_probability:"{value}%",pressure:"{value} hPa",uv_index:"{value}",sunrise:"{value}",sunset:"{value}",daily_forecast:"Previsió diària",hourly_forecast:"Previsió horària",daily:"Diari",hourly:"Horari",today:"Avui",tomorrow:"Demà",no_forecast_data:"No hi ha dades de previsió disponibles. Comprova l'entitat o els registres.",no_hourly_forecast:"Previsions horàries no suportades per aquesta entitat.",alerts:"Alertes",no_alerts:"Sense alertes",active_alerts:"Alertes actives = {count}",alerts_details:"Detalls de les alertes",wind_alert:"Vent",rain_intensity_alert:"Intensitat de pluja",rain_alert:"Pluja",sea_alert:"Mar",cold_alert:"Fred",warm_alert:"Calor",warm_night_alert:"Nit càlida",snow_alert:"Neu",inicio:"Inici",fin:"Fi",fecha:"Data",periodo:"Període",comentario:"Comentari",umbral:"Llindar",peligro:"Perill",nivel:"Nivell",attribution:"Powered by Meteocatpy",sun:"Dg",mon:"Dl",tue:"Dt",wed:"Dc",thu:"Dj",fri:"Dv",sat:"Ds",unknown:"Desconegut",clear:"Clar",clear_night:"Nit serena",sunny:"Assolellat",partlycloudy:"Parcialment ennuvolat",cloudy:"Ennuvolat",rainy:"Plujós",pouring:"Tempesta",lightning_rainy:"Tempesta amb llamps",fog:"Boira",hail:"Calamarsa",snowy:"Nevat",snowy_rainy:"Aiguaneu",threshold:{alert_wind:{wind_gusts_25:"Ràfegues de vent > 25 m/s",microburst:"Microburst",tornadoes:"Tornados o trombes marines",wind_40:"Velocitat màx. del vent > 40 m/s",wind_35:"Velocitat màx. del vent > 35 m/s",wind_30:"Velocitat màx. del vent > 30 m/s",wind_25:"Velocitat màx. del vent > 25 m/s",wind_20:"Velocitat màx. del vent > 20 m/s",unknown:"Desconegut"},alert_rain_intensity:{hail_2_cm:"Calamarsa amb diàmetre > 2 cm",microburst:"Microburst",intensity_40_30:"Intensitat > 40 mm / 30 minuts",intensity_20_30:"Intensitat > 20 mm / 30 minuts",unknown:"Desconegut"},alert_rain:{microburst:"Microburst",rain_200_24:"Quantitat > 200 mm / 24 hores",rain_100_24:"Quantitat > 100 mm / 24 hores",unknown:"Desconegut"},alert_sea:{microburst:"Microburst",tornadoes:"Tornados o trombes marines",waves_4:"Ones > 4,00 metres (mar aspra)",waves_2_50:"Ones > 2,50 metres (marejada)",unknown:"Desconegut"},alert_cold:{cold_very_intense:"Fred molt intens",cold_intense:"Fred intens",unknown:"Desconegut"},alert_warm:{heat_very_intense:"Calor molt intens",heat_intense:"Calor intens",unknown:"Desconegut"},alert_warm_night:{heat_night_very_intense:"Calor nocturn molt intens",heat_night_intense:"Calor nocturn intens",unknown:"Desconegut"},alert_snow:{hail_2_cm:"Calamarsa amb diàmetre > 2 cm",thickness_50_at_1000:"Gruix > 50 cm a altituds superiors a 1000 metres fins a 1500 metres",thickness_30_at_800:"Gruix > 30 cm a altituds superiors a 800 metres fins a 1000 metres",thickness_20_at_600:"Gruix > 20 cm a altituds superiors a 600 metres fins a 800 metres",thickness_20_at_1000:"Gruix > 20 cm a altituds superiors a 1000 metres fins a 1500 metres",thickness_15_at_300:"Gruix > 15 cm a altituds superiors a 300 metres fins a 600 metres",thickness_10_at_800:"Gruix > 10 cm a altituds superiors a 800 metres fins a 1000 metres",thickness_5_at_300:"Gruix > 5 cm a altituds inferiors a 300 metres",thickness_5_at_600:"Gruix > 5 cm a altituds superiors a 600 metres fins a 800 metres",thickness_2_at_300:"Gruix > 2 cm a altituds superiors a 300 metres fins a 600 metres",thickness_0_at_300:"Gruix ≥ 0 cm a altituds inferiors a 300 metres",unknown:"Desconegut"}},cardinal_directions:["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSO","SO","OSO","O","ONO","NO","NNO"]}};function n(t,e,i={},n=e){const a=t?.language||"en";let o=s[a]?.[e]||s.en[e]||n;return Object.entries(i).forEach(([t,e])=>{o=o.replace(`{${t}}`,e)}),o}function a(t,e,i,n=i){const a=t?.language||"en";return(s[a]?.threshold?.[e]||s.en.threshold[e]||{})[i]||n}class o extends HTMLElement{_config;_hass;_content;iconPath="/local/meteocat-card/icons/";useStaticIcons=!1;_currentForecast="daily";_dailyForecasts=[];_hourlyForecasts=[];_entitiesDiscovered=!1;_currentSlide=0;_sliderValue=0;_isDragging=!1;_legacySliderTouchCapture;constructor(){super(),this.attachShadow({mode:"open"}),this._content=document.createElement("div"),this.shadowRoot.appendChild(this._content)}static getConfigElement(){return document.createElement("meteocat-card-editor")}static getStubConfig(t){if(t){const e=Object.values(t.states).filter(t=>t.entity_id.startsWith("weather.")).map(t=>({entity_id:t.entity_id,friendly_name:t.attributes?.friendly_name}));console.log("MeteocatCard getStubConfig: Available weather entities =",e)}return{entity:"weather.home",sunrise_entity:"sensor.sun_next_rising",sunset_entity:"sensor.sun_next_setting",option_static_icons:!1}}setConfig(t){if(!t?.entity)throw new Error(n(this._hass,"entity_not_found",{entity:t?.entity||"unknown"}));this._config={type:"meteocat-card",sunrise_entity:"sensor.home_sunrise",sunset_entity:"sensor.home_sunset",option_static_icons:!1,...t,title:void 0},delete this._config.title,delete this._config.icons,this._entitiesDiscovered=!1,this.useStaticIcons=!!this._config.option_static_icons,this._discoverEntities(),this._update()}set hass(t){this._hass=t,this._discoverEntities(),this._update()}async _discoverEntities(){if(!this._entitiesDiscovered&&this._hass&&this._config?.entity)try{const t=await this._hass.callWS({type:"config/entity_registry/list"}),e=t.find(t=>t.entity_id===this._config.entity),i=e?.device_id;if(!i)return console.debug("MeteocatCard: No device_id found for",this._config.entity,"- skipping autodiscovery."),void(this._entitiesDiscovered=!0);const s=e=>{const s=t.find(t=>t.device_id===i&&t.translation_key===e);return s?s.entity_id:null};this._config.feels_like_entity=s("feels_like")||this._config.feels_like_entity,this._config.forecast_max_entity=s("max_temperature_forecast")||this._config.forecast_max_entity,this._config.forecast_min_entity=s("min_temperature_forecast")||this._config.forecast_min_entity,this._config.precipitation_entity=s("precipitation_accumulated")||this._config.precipitation_entity,this._config.precipitation_probability_entity=s("precipitation_probability")||this._config.precipitation_probability_entity,this._config.town_name_entity=s("town_name")||this._config.town_name_entity,this._config.alerts_entity=s("alerts")||this._config.alerts_entity;const n=["alert_wind","alert_rain_intensity","alert_rain","alert_sea","alert_cold","alert_warm","alert_warm_night","alert_snow"];for(const t of n)this._config[`${t}_entity`]=s(t)||this._config[`${t}_entity`];this._entitiesDiscovered=!0,console.log("MeteocatCard: autodiscovered entities:",{feels_like:this._config.feels_like_entity,forecast_max:this._config.forecast_max_entity,forecast_min:this._config.forecast_min_entity,precipitation:this._config.precipitation_entity,precipitation_probability:this._config.precipitation_probability_entity,town_name:this._config.town_name_entity,alerts:this._config.alerts_entity,...n.reduce((t,e)=>({...t,[e]:this._config[`${e}_entity`]}),{})}),this._update()}catch(t){console.error("MeteocatCard: Error discovering entities by translation_key:",t),this._entitiesDiscovered=!0}}_convertDegreesToCardinal(t){if(!isFinite(t)||null==t)return n(this._hass,"unknown",{},"Unknown");return function(t){const e=t?.language||"en";return s[e]?.cardinal_directions||s.en.cardinal_directions}(this._hass)[Math.round(t/22.5)%16]}_formatTimestamp(t){if(!t||!isFinite(new Date(t).getTime()))return"-";const e=new Date(t),i=new Date,s=new Date(i);s.setDate(i.getDate()+1);const a=e.toISOString().split("T")[0],o=i.toISOString().split("T")[0],r=s.toISOString().split("T")[0],c=e.toLocaleTimeString(this._hass?.language||"es-ES",{hour:"2-digit",minute:"2-digit"}),l=[n(this._hass,"sun"),n(this._hass,"mon"),n(this._hass,"tue"),n(this._hass,"wed"),n(this._hass,"thu"),n(this._hass,"fri"),n(this._hass,"sat")][e.getDay()];return a===o?c:a===r?`${l} ${c}`:c}_formatForecastDate(t){if(!t||!isFinite(new Date(t).getTime()))return"-";const e=new Date(t),i=new Date,s=new Date(i);s.setDate(i.getDate()+1);const a=e.toISOString().split("T")[0],o=i.toISOString().split("T")[0],r=s.toISOString().split("T")[0],c=[n(this._hass,"sun"),n(this._hass,"mon"),n(this._hass,"tue"),n(this._hass,"wed"),n(this._hass,"thu"),n(this._hass,"fri"),n(this._hass,"sat")][e.getDay()];return a===o?n(this._hass,"today"):a===r?n(this._hass,"tomorrow"):c}_formatForecastHour(t){return t&&isFinite(new Date(t).getTime())?new Date(t).toLocaleTimeString(this._hass?.language||"es-ES",{hour:"2-digit",minute:"2-digit"}):"-"}_toggleForecast(t){this._currentForecast=t,this._currentSlide=0,this._sliderValue=0,this._update()}_getForecastPropFromWeather(t,e,i){if(!t||!Array.isArray(t))return;const s=e.toDateString(),n=t.filter(t=>new Date(t.datetime).toDateString()===s);if(1===n.length)return void 0!==n[0][i]?String(n[0][i]):void 0;if(2===n.length){const t=n.find(t=>!0===t.daytime),e=n.find(t=>!1===t.daytime);return"templow"===i?void 0!==e?.temperature?String(e.temperature):void 0:void 0!==t?.[i]?String(t[i]):void 0}}async _fetchForecasts(t){if(!this._hass||!this._config?.entity)return[];try{const e=await this._hass.callWS({type:"call_service",domain:"weather",service:"get_forecasts",service_data:{entity_id:this._config.entity,type:t},return_response:!0});console.log(`MeteocatCard: Raw response for ${t} forecasts =`,JSON.stringify(e,null,2));return(e?.response?.[this._config.entity]?.forecast||[]).map(t=>({...t,datetime:new Date(t.datetime),condition:t.condition?t.condition.replace(/-/g,"_"):t.condition}))}catch(e){console.error(`MeteocatCard: Error fetching ${t} forecasts:`,e);const i=this._hass.states[this._config.entity];return i?.attributes?.forecast?(console.log(`MeteocatCard: Falling back to entity attributes for ${t} forecasts`,i.attributes.forecast),i.attributes.forecast.filter(e=>new Date(e.datetime).toISOString().split("T")[0]===(new Date).toISOString().split("T")[0]||"daily"===t).map(t=>({...t,datetime:new Date(t.datetime),condition:t.condition?t.condition.replace(/-/g,"_"):t.condition}))):[]}}_isDaytime(t){if(!this._hass||!this._config.sunrise_entity||!this._config.sunset_entity){console.warn("MeteocatCard: Sunrise or sunset data unavailable, falling back to default day/night logic");const e=new Date(t).getHours();return e>=6&&e<18}const e=this._hass.states[this._config.sunrise_entity]?.state,i=this._hass.states[this._config.sunset_entity]?.state;if(!e||!i){console.warn("MeteocatCard: Sunrise or sunset data unavailable, falling back to default day/night logic");const e=new Date(t).getHours();return e>=6&&e<18}const s=new Date(t),n=new Date(e),a=new Date(i);return n.setFullYear(s.getFullYear(),s.getMonth(),s.getDate()),a.setFullYear(s.getFullYear(),s.getMonth(),s.getDate()),s>=n&&s<a}async _update(){if(!this._hass||!this._config)return;const t=this._hass.states[this._config.entity],e=this._config.feels_like_entity?this._hass.states[this._config.feels_like_entity]:null,i=this._config.forecast_max_entity?this._hass.states[this._config.forecast_max_entity]:null,s=this._config.forecast_min_entity?this._hass.states[this._config.forecast_min_entity]:null,o=this._config.precipitation_entity?this._hass.states[this._config.precipitation_entity]:null,r=this._config.precipitation_probability_entity?this._hass.states[this._config.precipitation_probability_entity]:null,c=this._hass.states[this._config.sunrise_entity],l=this._hass.states[this._config.sunset_entity],d=this._config.alerts_entity?this._hass.states[this._config.alerts_entity]:null,_=this._config.town_name_entity?this._hass.states[this._config.town_name_entity]?.state??"-":"-";if(!t)return void(this._content.innerHTML=`<ha-card>\n        <div style="padding:16px">${n(this._hass,"entity_not_found",{entity:this._config.entity})}</div>\n      </ha-card>`);const h=(t.attributes?.condition||t.state||"unknown").replace(/-/g,"_"),u=n(this._hass,h.toLowerCase(),{},h),m=new Date,g="clear_night"!==h&&this._isDaytime(m),f=this._getIconFile(h,g),p=t.attributes?.friendly_name||this._config.entity;console.log("MeteocatCard: friendly_name =",p);const y=t.attributes?.wind_bearing,v=this._convertDegreesToCardinal(y),w=t.attributes?.wind_speed??"-",b=t.attributes?.wind_gust_speed??"-",x=t.attributes?.wind_speed_unit??"km/h",k=n(this._hass,"wind","-"!==w&&"-"!==b?{value:`${v} ${w} ${x} (${n(this._hass,"gust")} ${b} ${x})`}:"-"!==w?{value:`${v} ${w} ${x}`}:{value:`${v} -`});this._dailyForecasts=await this._fetchForecasts("daily"),this._hourlyForecasts=await this._fetchForecasts("hourly"),console.log("MeteocatCard: Daily forecasts =",this._dailyForecasts),console.log("MeteocatCard: Hourly forecasts =",this._hourlyForecasts);let C=`\n      <div class="forecast-toggle">\n        <button class="toggle-btn ${"daily"===this._currentForecast?"active":""}" id="daily-btn">${n(this._hass,"daily")}</button>\n        <button class="toggle-btn ${"hourly"===this._currentForecast?"active":""}" id="hourly-btn">${n(this._hass,"hourly")}</button>\n      </div>\n    `;if("daily"===this._currentForecast&&this._dailyForecasts.length>0)C+=`\n        <div class="forecast-section">\n          <div class="forecast-title"><strong>${n(this._hass,"daily_forecast")}</strong></div>\n          <div class="forecast-slider">\n            <div class="slider-container">\n              <div class="slider-track">\n                ${this._dailyForecasts.map((t,e)=>{const i=new Date;i.setDate(i.getDate()+e);const s=t.condition||this._getForecastPropFromWeather(this._dailyForecasts,i,"condition")||"unknown",n=!1!==t.daytime,a=this._getIconFile(s,n),o=t.temperature||this._getForecastPropFromWeather(this._dailyForecasts,i,"temperature")||"-",r=t.templow||this._getForecastPropFromWeather(this._dailyForecasts,i,"templow")||"-",c=t.precipitation_probability||this._getForecastPropFromWeather(this._dailyForecasts,i,"precipitation_probability")||"-";t.precipitation||this._getForecastPropFromWeather(this._dailyForecasts,i,"precipitation");return`\n                    <div class="forecast-item">\n                      <div class="forecast-day">${this._formatForecastDate(t.datetime)}</div>\n                      <img src="${a}" alt="${s}" class="forecast-icon">\n                      <div class="forecast-temp">${o}°C / ${r}°C</div>\n                      <div class="forecast-precip"><ha-icon icon="mdi:weather-rainy"></ha-icon>${c}%</div>\n                    </div>\n                  `}).join("")}\n              </div>\n            </div>\n            <div class="slider-bar">\n              <div class="slider-bg"></div>\n            </div>\n          </div>\n        </div>\n      `;else if("hourly"===this._currentForecast&&this._hourlyForecasts.length>0)C+=`\n        <div class="forecast-section">\n          <div class="forecast-title"><strong>${n(this._hass,"hourly_forecast")}</strong></div>\n          <div class="forecast-slider">\n            <div class="slider-container">\n              <div class="slider-track">\n                ${this._hourlyForecasts.map((t,e)=>{const i=new Date;i.setHours(i.getHours()+e+1);const s=t.condition||this._getForecastPropFromWeather(this._hourlyForecasts,i,"condition")||"unknown",a=this._getIconFile(s,this._isDaytime(i)),o=t.temperature||this._getForecastPropFromWeather(this._hourlyForecasts,i,"temperature")||"-",r=t.precipitation||this._getForecastPropFromWeather(this._hourlyForecasts,i,"precipitation")||"0",c=t.wind_speed||this._getForecastPropFromWeather(this._hourlyForecasts,i,"wind_speed")||"-",l=t.humidity||this._getForecastPropFromWeather(this._hourlyForecasts,i,"humidity")||"-";return`\n                    <div class="forecast-item">\n                      <div class="forecast-hour">${this._formatForecastHour(t.datetime)}</div>\n                      <img src="${a}" alt="${s}" class="forecast-icon">\n                      <div class="forecast-temp">${o}°C</div>\n                      <div class="forecast-humidity"><ha-icon icon="mdi:water-percent"></ha-icon>${n(this._hass,"humidity",{value:l})}</div>\n                      <div class="forecast-precip"><ha-icon icon="mdi:weather-rainy"></ha-icon>${r} mm</div>\n                      <div class="forecast-wind"><ha-icon icon="mdi:weather-windy"></ha-icon>${c} km/h</div>\n                    </div>\n                  `}).join("")}\n              </div>\n            </div>\n            <div class="slider-bar">\n              <div class="slider-bg"></div>\n            </div>\n          </div>\n        </div>\n      `;else{C+=`<div style="padding: 20px; color: var(--secondary-text-color);">${"hourly"===this._currentForecast?n(this._hass,"no_hourly_forecast"):n(this._hass,"no_forecast_data")}</div>`}let D="";if(d){const t=parseInt(d.state??0,10);D=`\n        <div class="alerts-section">\n          <div class="alerts-title">${n(this._hass,"alerts")}</div>\n          <div class="alerts-summary">\n      `,D+=0===t?`<ha-icon icon="mdi:check-circle" style="color: green;"></ha-icon> ${n(this._hass,"no_alerts")}`:`<ha-icon icon="mdi:alert-circle" style="color: red;"></ha-icon> ${n(this._hass,"active_alerts",{count:t})}`,D+="</div>";const e=["alert_wind","alert_rain_intensity","alert_rain","alert_sea","alert_cold","alert_warm","alert_warm_night","alert_snow"],i={alert_wind:n(this._hass,"wind_alert"),alert_rain_intensity:n(this._hass,"rain_intensity_alert"),alert_rain:n(this._hass,"rain_alert"),alert_sea:n(this._hass,"sea_alert"),alert_cold:n(this._hass,"cold_alert"),alert_warm:n(this._hass,"warm_alert"),alert_warm_night:n(this._hass,"warm_night_alert"),alert_snow:n(this._hass,"snow_alert")};let s="";for(const t of e){const e=this._config[`${t}_entity`];if(e){const o=this._hass.states[e];if("opened"===o?.state){let e="";const r=o.attributes??{};["inicio","fin","fecha","periodo","comentario","umbral","peligro","nivel"].forEach(i=>{if(void 0!==r[i]&&null!==r[i]){const s="umbral"===i?a(this._hass,t,r[i],r[i]):r[i];e+=`<div class="alert-attr"><span class="alert-attr-name">${n(this._hass,i)}:</span> <span class="alert-attr-value">${s}</span></div>`}}),s+=`\n              <div class="alert-detail-item">\n                <div class="alert-name">${i[t]}</div>\n                ${e}\n              </div>\n            `}}}t>0&&(D+=`\n          <div class="alerts-details-section">\n            <div class="alerts-details-title">${n(this._hass,"alerts_details")}</div>\n            ${s}\n          </div>\n        `),D+="</div>"}this._content.innerHTML=`\n      <ha-card>\n        <style>\n          .header { font-size: 1.8em; font-weight: normal; margin: 8px 20px 0; font-family: sans-serif; }\n          .town-name { font-size: 1.2em; color: var(--secondary-text-color); margin: 0 20px 8px; font-family: sans-serif; }\n          .current { display: flex; justify-content: space-between; align-items: center; padding: 0 16px 2px; }\n          .current-left { display: flex; align-items: center; gap: 8px; }\n          .current-left img { width: 100px; height: 100px; }\n          .current-condition { font-size: 1.6em; font-weight: normal; font-family: sans-serif; }\n          .current-right { text-align: right; }\n          .current-temp { font-size: 2.5em; font-weight: normal; font-family: sans-serif; }\n          .current-feels { font-size: 0.9em; color: var(--secondary-text-color); margin-top: -10px; font-family: sans-serif; }\n          .details { display: grid; grid-template-columns: 0.9fr 1.1fr; gap: 2px 12px; padding: 6px 20px 10px; font-size: 1.0em; font-family: sans-serif; }\n          .detail { display: flex; align-items: center; gap: 4px; }\n          .detail ha-icon { color: var(--secondary-text-color); }\n          .forecast-toggle { display: flex; gap: 8px; padding: 8px 20px; }\n          .toggle-btn { padding: 4px 8px; border: 1px solid var(--divider-color); background: none; cursor: pointer; border-radius: 4px; font-family: sans-serif; }\n          .toggle-btn.active { background-color: var(--primary-color); color: white; }\n          .forecast-section { padding: 8px 20px; }\n          .forecast-title { font-size: 1.1em; font-weight: 500; margin-bottom: 4px; font-family: sans-serif; }\n          .forecast-slider { position: relative; }\n          .slider-container { overflow: hidden; width: calc(100px * 4 + 24px); }\n          .slider-track { display: flex; transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1); }\n          .forecast-item { display: flex; flex-direction: column; align-items: center; padding: 2px; min-width: 100px; margin-right: 8px; }\n          .forecast-icon { width: 48px; height: 48px; }\n          .forecast-day, .forecast-hour { font-weight: 500; font-family: sans-serif; }\n          .forecast-temp { font-size: 0.9em; font-family: sans-serif; }\n          .forecast-humidity { font-size: 0.9em; display: flex; align-items: center; gap: 2px; font-family: sans-serif; }\n          .forecast-precip, .forecast-wind { font-size: 0.9em; display: flex; align-items: center; gap: 2px; font-family: sans-serif; }\n          .forecast-precip ha-icon, .forecast-wind ha-icon, .forecast-humidity ha-icon { font-size: 0.8em; }\n          .slider-bar { position: relative; height: 8px; background: var(--slider-track-color, #e0e0e0); border-radius: 4px; margin: 8px 0; cursor: pointer; }\n          .slider-bg { position: absolute; top: 0; left: 0; height: 100%; width: var(--slider-value, 0%); background: var(--slider-color, var(--primary-color, #03a9f4)); border-radius: 4px; transition: width 0.3s cubic-bezier(0.25, 0.1, 0.25, 1); }\n          .slider-bar.dragging .slider-bg { transition: none; }\n          .alerts-section { padding: 8px 20px; }\n          .alerts-title { font-size: 1.3em; font-weight: 500; margin-bottom: 4px; font-family: sans-serif; }\n          .alerts-summary { display: flex; align-items: center; gap: 4px; font-size: 1.0em; font-family: sans-serif; }\n          .alerts-details-section { margin-top: 8px; }\n          .alerts-details-title { font-size: 1.3em; font-weight: 500; margin-bottom: 4px; font-family: sans-serif; }\n          .alert-detail-item { margin-bottom: 12px; }\n          .alert-name { font-weight: bold; font-size: 1.0em; text-decoration: underline; font-family: sans-serif; }\n          .alert-attr { font-size: 0.9em; color: var(--secondary-text-color); font-family: sans-serif; }\n          .alert-attr-name { font-weight: bold; }\n          .alert-attr-value { }\n          .attribution { text-align: center; font-size: 0.8em; color: var(--secondary-text-color); padding: 8px 20px; font-family: sans-serif; }\n        </style>\n\n        <div class="header">Meteocat</div>\n        <div class="town-name">${_}</div>\n\n        <div class="current">\n          <div class="current-left">\n            <img src="${f}" alt="${u}">\n            <div class="current-condition">${u}</div>\n          </div>\n          <div class="current-right">\n            <div class="current-temp">${t.attributes?.temperature??"-"}°C</div>\n            <div class="current-feels">${n(this._hass,"feels_like",{value:e?.state??"-"})}</div>\n          </div>\n        </div>\n\n        <div class="details">\n          <div class="detail"><ha-icon icon="mdi:thermometer-high"></ha-icon>${n(this._hass,"max_temp",{value:i?.state??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:thermometer-low"></ha-icon>${n(this._hass,"min_temp",{value:s?.state??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:water-percent"></ha-icon>${n(this._hass,"humidity",{value:t.attributes?.humidity??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-windy"></ha-icon>${k}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-rainy"></ha-icon>${n(this._hass,"precipitation",{value:o?.state??t.attributes?.precipitation??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-pouring"></ha-icon>${n(this._hass,"precipitation_probability",{value:r?.state??t.attributes?.precipitation_probability??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:gauge"></ha-icon>${n(this._hass,"pressure",{value:t.attributes?.pressure??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-sunny-alert"></ha-icon>${n(this._hass,"uv_index",{value:t.attributes?.uv_index??"-"})}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-sunset-up"></ha-icon>${n(this._hass,"sunrise",{value:this._formatTimestamp(c?.state)})}</div>\n          <div class="detail"><ha-icon icon="mdi:weather-sunset-down"></ha-icon>${n(this._hass,"sunset",{value:this._formatTimestamp(l?.state)})}</div>\n        </div>\n\n        ${C}\n\n        ${D}\n\n        <div class="attribution">Powered by Meteocatpy</div>\n      </ha-card>\n    `;const S=this.shadowRoot.querySelector("#daily-btn"),M=this.shadowRoot.querySelector("#hourly-btn"),F=this.shadowRoot.querySelector(".slider-track"),E=this.shadowRoot.querySelector(".slider-bar");if(S&&S.addEventListener("click",()=>this._toggleForecast("daily")),M&&M.addEventListener("click",()=>this._toggleForecast("hourly")),F&&E){const t=108,e=4,i="daily"===this._currentForecast?this._dailyForecasts.length:this._hourlyForecasts.length,s=Math.max(0,i-e),n=s*t,a=(s,a=!0)=>{if(i<=e)return this._sliderValue=0,F.style.transform="translateX(0px)",void E.style.setProperty("--slider-value","0%");this._sliderValue=Math.max(0,Math.min(100,s));const o=this._sliderValue/100*n;if(this._currentSlide=Math.round(o/t),F.style.transition=a?"transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1)":"none",F.style.transform=`translateX(-${o}px)`,E.style.setProperty("--slider-value",`${this._sliderValue}%`),a){const t=()=>{F.removeEventListener("transitionend",t)};F.addEventListener("transitionend",t)}},o=t=>{i<=e||(t.preventDefault(),t.stopPropagation(),this._isDragging=!0,E.classList.add("dragging"),E.setPointerCapture(t.pointerId))},r=t=>{if(!this._isDragging)return;this._isDragging=!1,E.classList.remove("dragging"),E.releasePointerCapture(t.pointerId);const e=Math.round(this._sliderValue/100*s);a(e/s*100)},c=t=>{if(!this._isDragging||i<=e)return;const{left:s,width:n}=E.getBoundingClientRect(),o=Math.max(0,Math.min(n,t.clientX-s));a(o/n*100,!1)},l=t=>{if(i<=e)return;t.preventDefault(),t.stopPropagation();const{left:n,width:o}=E.getBoundingClientRect(),r=Math.max(0,Math.min(o,t.clientX-n))/o*100,c=Math.round(r/100*s);a(c/s*100)},d=t=>{"PointerEvent"in window||i<=e||(t.preventDefault(),this._isDragging=!0,E.classList.add("dragging"),this._legacySliderTouchCapture=t.touches[0].identifier)},_=()=>{if("PointerEvent"in window)return;if(!this._isDragging)return;this._isDragging=!1,E.classList.remove("dragging"),this._legacySliderTouchCapture=void 0;const t=Math.round(this._sliderValue/100*s);a(t/s*100)},h=t=>{if("PointerEvent"in window)return;if(!this._isDragging||this._legacySliderTouchCapture!==t.touches[0].identifier||i<=e)return;const{left:s,width:n}=E.getBoundingClientRect(),o=Math.max(0,Math.min(n,t.touches[0].clientX-s));a(o/n*100,!1)};E.addEventListener("pointerdown",o),E.addEventListener("pointerup",r),E.addEventListener("pointermove",c),E.addEventListener("click",l),E.addEventListener("touchstart",d),E.addEventListener("touchend",_),E.addEventListener("touchmove",h),a(this._sliderValue,!1)}}_getIconFile(t,e){const i=String(t||"unknown").toLowerCase(),s=this.useStaticIcons?"s-":"a-",n={clear_night:"clear",clear:"clear",sunny:"clear-day",partlycloudy:"cloudy-1",cloudy:"cloudy-3",rainy:"rainy-2",pouring:"rainy-3",lightning_rainy:"scattered-thunderstorms",fog:"fog",hail:"hail",snowy:"snowy-3",snowy_rainy:"snowy-1",unknown:"unknown"};let a=n[i]||n[i.replace(/\s/g,"")]||"unknown";return"unknown"!==a&&"clear-day"!==a&&(a+=e?"-day":"-night"),console.log("MeteocatCard: _getIconFile called with condition =",t,"isDay =",e,"resulting icon =",`${this.iconPath}${s}${a}.svg`),`${this.iconPath}${s}${a}.svg`}getCardSize(){return 6}}customElements.get("meteocat-card")||(customElements.define("meteocat-card",o),console.log("MeteocatCard: Registering custom element meteocat-card")),window.customCards=window.customCards||[],window.customCards.push({type:"meteocat-card",name:n(null,"card_name",{},"Meteocat Card"),description:n(null,"card_description",{},"Tarjeta personalizada para mostrar datos de Meteocat."),preview:!1});
